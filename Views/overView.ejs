<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script
      src="https://kit.fontawesome.com/44dd7d2f30.js"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.0.0-alpha.1/axios.min.js"
      integrity="sha512-xIPqqrfvUAc/Cspuj7Bq0UtHNo/5qkdyngx6Vwt+tmbvTLDszzXM0G6c91LXmGrRx8KEPulT+AfOOez+TeVylg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    ></script>
    <link rel="stylesheet" href="styleOverview.css" />
    <title>Contacts</title>
  </head>
  <body>
    <div class="container">
      <header class="header">
        <form class="search-bar">
          <input
            type="search-name"
            class="contact-search"
            name="search-area"
            placeholder="Search"
          />
        </form>
        <div class="add-button" id="addButton">
          <a type="click" id="addButton" class="add-button">
            <i class="fa-solid fa-circle-plus"></i
          ></a>
        </div>

        <button type="click" class="log-out" id="logOut">Log Out</button>
      </header>
      <section class="contacts-library">
        <div class="contacts-div"></div>
        <% if(user){ %>
        <div class="user-info">
          <p style="color: rgb(0, 0, 0)">You are logged in as</p>
          <p class="user-name" style="font-weight: 80">
            <%= JSON.stringify(user.name) %>
          </p>
        </div>

        <% } else{ %>
        <h1>---No User---</h1>
        <% } %>

        <ul class="all-cards">
          <% for(var contact of user.contacts){ %>
          <div id="<%= contact.number %>" type="click" class="card">
            <div id="contactName" class="contact-name"><%= contact.name %></div>
            <div id=" contactNumber" class="contact-number">
              <%=contact.number%>
            </div>
          </div>
          <% } %>
        </ul>

        <!-- <template class="contact-cards" data-contact-template>
          
        </template> -->
      </section>
    </div>

    <script type="module">
      export const logout = async () => {
        try {
          const res = await axios({
            method: 'GET',
            url: 'http://127.0.0.1:3000/api/v1/users/logout',
          });

          if ((res.data.status = 'success'))
            location.assign('http://127.0.0.1:3000/loginpage');
        } catch (err) {
          console.log(err.response);
          alert('Something went wrong. Try again');
        }
      };

      export const goToEditContact = async (name, number) => {
        try {
          const res = await axios({
            method: 'GET',
            url: 'http://127.0.0.1:3000/editcontact',
            data: {
              name,
              number,
            },
          });
          location.assign('http://127.0.0.1:3000/editcontact');
        } catch (err) {
          alert(err.response);
        }
      };

      //INDEX
      const addBtn = document.querySelector('.add-button');
      const logOutBtn = document.querySelector('.log-out');
      const searchBar = document.querySelector('.search-bar');
      const allCards = document.querySelectorAll('.card');
      console.log(allCards);
      addBtn.addEventListener('click', () => {
        location.assign('http://127.0.0.1:3000/addcontact');
      });

      if (logOutBtn) {
        logOutBtn.addEventListener('click', () => {
          console.log('you clicked');
          logout();
        });
      }
      document.body.addEventListener('click', (event) => {
        if (event.target.classList.contains('card')) {
          console.log(event.target.id);
          sessionStorage.setItem('currentNumber', event.target.id);

          goToEditContact(event.target.id);
        }
      });

      if (searchBar) {
        const contactCards = Array.from(allCards);
        searchBar.addEventListener('input', (e) => {
          const value = e.target.value;
          contactCards.forEach((card) => {
            console.log(card.firstChild.textContent);
            // const isVisible =
            //   card.firstChild.textContent.toLowerCase.includes(value) ||
            //   card.lastChild.textContent.toLowerCase.includes(value);
            // contact.element.classList.toggle('hide', !isVisible);
          });
        });
      }
    </script>
  </body>
</html>
<!DOCTYPE html>
