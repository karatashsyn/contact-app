<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      http-equiv="Content-Security-Policy"
      content="default-src * self blob: data: gap:; style-src * self 'unsafe-inline' blob: data: gap:; script-src * 'self' 'unsafe-eval' 'unsafe-inline' blob: data: gap:; object-src * 'self' blob: data: gap:; img-src * self 'unsafe-inline' blob: data: gap:; connect-src self * 'unsafe-inline' blob: data: gap:; frame-src * self blob: data: gap:;"
    />
    <title>Edit Contact</title>
    <link rel="stylesheet" href="styleEditContact.css" />
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.0.0-alpha.1/axios.min.js"
      integrity="sha512-xIPqqrfvUAc/Cspuj7Bq0UtHNo/5qkdyngx6Vwt+tmbvTLDszzXM0G6c91LXmGrRx8KEPulT+AfOOez+TeVylg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    ></script>
    <script
      src="https://kit.fontawesome.com/44dd7d2f30.js"
      crossorigin="anonymous"
    ></script>
  </head>
  <body>
    <div class="container">
      <header class="hero">
        <div class="back-button" type="click">
          <a href="#" class="back-btn">
            <i class="fa-solid fa-arrow-left-long"></i>
          </a>
        </div>

        <div class="hero-info">
          <h1 class="hero-name"><%= user.name%></h1>
        </div>
       
      </header>

      <form class="form" class="form-contact-data">
        <div class="info-line">
          <i class="fa-solid fa-user user icon-user"></i>
          <input
            id="name"
            type="text"
            class="input-name type"
            name="name"
            placeholder="New Name"
            required="true"
          />
        </div>
        <div class="info-line">
          <i class="fa-solid fa-phone icon-phone"></i>
          <input
            id="number"
            type="text"
            class="input-number type"
            name="number"
            placeholder="Number"
            readonly="true"
           
          />
        </div>
        <div class="button-container">
          
            <div type="click" class="update-contact" ><p>Save Changes</p></div>
          
          <a href="#">
            <div class="delete-contact"><p>Delete Contact</p></div>
          </a>
        </div>
      </div>
      </form>
      <script type="module">
      
      export const updateCurrentContact= async(name, number)=>{
      try{
        const res = await axios({
        method:'PATCH',
        url:'http://127.0.0.1:3000/api/v1/users/updatecontact',
        data:{
          name,
          number,
        },
      });
        if(res.data.status === 'success') {
            window.setTimeout(() => {
              location.assign('http://127.0.0.1:3000/overview');
            }, 1500);
          }
        } catch (err) {
          alert(err.response.data.message + '❌');
        }
      }


      export const deleteCurrentContact = async(number)=>{
        try{
            const res = await axios({
                method:'PATCH',
                url:'http://127.0.0.1:3000/api/v1/users/deletecontact',
                data:{
                    number
                }
            })
        }
        catch(err){
            alert(err.response.data.message + '❌');
        }
      }
      
      //INDEX
      const currentContactNumber =  sessionStorage.getItem('currentNumber');
      const currentContactName = sessionStorage.getItem('currentName');
      console.log(currentContactName);
      const logOutBtn = document.querySelector('.log-out-link');
      const backBtn = document.querySelector('.back-button');
      const updateBtn = document.querySelector('.update-contact');
      const deleteBtn = document.querySelector('.delete-contact');
      const contactDataForm = document.querySelector('form-contact-data');
      const numberInput = document.querySelector('.input-number');
      const nameInput = document.querySelector('.input-name')
      numberInput.value=currentContactNumber;
      nameInput.value=currentContactName; 
     
      if (logOutBtn) {
        logOutBtn.addEventListener('click', ()=>{
          logout()}
          );
        }

        backBtn.addEventListener('click' , (e)=>{
        e.preventDefault();
        location.assign('http://127.0.0.1:3000/overview')
      })
  
      

      nameInput.addEventListener('input', (e) => {
        
          const val = e.target.value.toString();
          updateBtn.setAttribute("style","background-color:rgb(50,205,50)");
        
          console.log(val)
            if(val===''||val===currentContactName){
    
                updateBtn.setAttribute("style","background-color:gray");
                
            }

          });
        
        updateBtn.addEventListener('click', (e) => {
          const name = document.getElementById('name').value;
          const number = document.getElementById('number').value;
          if(nameInput.value===""){
            alert('Contact Name cannot be empty ⚠️');
          
            }
            else{
                updateCurrentContact(name,number);
            alert('Changes are saved ✔️');
             window.setTimeout(() => {
            location.assign('http://127.0.0.1:3000/overview');
          }, 1000);
            }
          
        });

        deleteBtn.addEventListener('click', (e)=>{
            const deletedNumber = numberInput.value;
            try{
                deleteCurrentContact(deletedNumber);
                alert('Contact has been deleted 🗑️');
                window.setTimeout(() => {
            location.assign('http://127.0.0.1:3000/overview');
          }, 1000);
            } 
            catch{
                alert('Upps, somethings went wrong, try again please 😥')
            }
            
        })

       </script> 

  </body>
</html>
